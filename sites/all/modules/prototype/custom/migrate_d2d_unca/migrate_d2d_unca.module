<?php

/**
 * This is example code for a Drupal 6 to Drupal 7 migration. This won't actually
 * work without defining the referenced vocabularies, content types, and fields
 * on each side.
 */


/**
 * Implements hook_flush_caches().
 */
function migrate_d2d_unca_flush_caches() {
  migrate_d2d_unca_register_migrations();
}

/**
 * Register all D6->D7 migrations.
 */
function migrate_d2d_unca_register_migrations() {
  /**
   * Each migration being registered takes an array of arguments, some required
   * and some optional. Start with the common arguments required by all - the
   * source_connection (connection key, set up in settings.php, pointing to
   * the Drupal 6 database) and source_version (major version of Drupal).
   */
  $common_arguments = array(
    'source_connection' => 'legacy',
    'source_version' => 6,
  );



  // 
  // +  +  +  +  USER ROLES  +  +  +  +  
  // 
  // Src: 
  // 1  anonymous user
  // 2 authenticated user
  // 3 content manager
  // 4 administrator
  // 
  // Target:
  // 1  anonymous user  
  // 2 authenticated user  
  // 3 administrator 
  // 
  // Migration:
  // Create target role: 4 content manager
  // Where src.rid = 3 (cont. mgr) or 5 (editor), convert to 4 (cont. mgr)
  // Where src.rid = 4 (admin), convert to 3 (administrator)
  
  $role_arguments = $common_arguments + array(
    'machine_name' => 'UNCARole',
    'description' => t('Import Drupal 6 roles'),
    'role_mappings' => array(
      'author' => 'content manager',
      'content manager' => 'content manager',
      'administrator' => 'administrator',
    ),
  );
  $role_migration_class = 'UNCARoleMigration';
  // $role_migration_class = 'DrupalRole6Migration';
  Migration::registerMigration($role_migration_class, 
    $role_arguments['machine_name'], $role_arguments);



  // 
  // +  +  +  +  USERS: 'UNCAUser'  +  +  +  +  
  // 
  // Src: 
  // 1  anonymous user
  // 2 authenticated user
  // 3 content manager
  // 4 administrator
  // 
  // Target:
  // 1  anonymous user  
  // 2 authenticated user  
  // 3 administrator 
  // 
  // Migration:
  // Create target role: 4 content manager
  // Where src.rid = 3 (cont. mgr) or 5 (editor), convert to 4 (cont. mgr)
  // Where src.rid = 4 (admin), convert to 3 (administrator)
  //  

  // The description and the migration machine name are also required arguments,
  // which will be unique for each migration you register.
  $arguments = $common_arguments + array(
    'description' => t('Migration of users from Drupal 6'),
    'machine_name' => 'UNCAUser',
    'role_migration' => 'UNCARole',    
  );
  $user_migration_class = 'UNCAUserMigration';
  // $user_migration_class = 'DrupalUser6Migration';

  // We just use the migrate_d2d D6 migration class as-is.
  Migration::registerMigration($user_migration_class, $arguments['machine_name'],
                               $arguments);





  // // 
  // // +  +  +  +  TAXONOMY  +  +  +  +  
  // // 

  // // For vocabulary migrations, source_vocabulary and destination_vocabulary are
  // // required arguments. Note that in Drupal 6 vocabularies did not have machine
  // // names, so we use the vocabulary ID to uniquely identify them.
  // $vocabulary_arguments = array(
  //   array(
  //     'description' => t('Migration of Countries terms from Drupal 6'),
  //     'machine_name' => 'Countries',
  //     'source_vocabulary' => '1',  // D6 Vocabulary ID
  //     'destination_vocabulary' => 'countries',
  //   ),
  //   array(
  //     'description' => t('Migration of Topics terms from Drupal 6'),
  //     'machine_name' => 'Topics',
  //     'source_vocabulary' => '2',  // D6 Vocabulary ID
  //     'destination_vocabulary' => 'topics',
  //   ),
  // );

  // // Again, we're using the migrate_d2d class directly.
  // // The soft dependency says that while we don't have to run the user migration
  // // first, we want to make sure it's listed first so the vocubularies are
  // // listed right ahead of the node migrations.
  // $common_vocabulary_arguments = $common_arguments + array(
  //   'class_name' => 'DrupalTerm6Migration',
  //   'soft_dependencies' => array('User'),
  // );
  // foreach ($vocabulary_arguments as $arguments) {
  //   $arguments += $common_vocabulary_arguments;
  //   Migration::registerMigration($arguments['class_name'], $arguments['machine_name'],
  //                                $arguments);
  // }





  // // 
  // // +  +  +  +  NODE  +  +  +  +  
  // // 

  // // Node migrations - each has its own class derived from the migrate_d2d class,
  // // specifying its particular field mappings and transformations. source_type
  // // and destination_type are required arguments.
  // $node_arguments = array(
  //   array(
  //     'class_name' => 'UNCAImageMigration',
  //     'description' => t('Migration of image nodes from Drupal 6'),
  //     'machine_name' => 'Image',
  //     'source_type' => 'image',
  //     'destination_type' => 'image',
  //   ),
  //   array(
  //     'class_name' => 'UNCAArticleMigration',
  //     'description' => t('Migration of article nodes from Drupal 6'),
  //     'machine_name' => 'Article',
  //     'source_type' => 'my_article',
  //     'destination_type' => 'new_article',
  //     'dependencies' => array('Image', 'Countries', 'Topics'),
  //   ),
  // );
  // // Tell the node migrations where the users are coming from, so they can
  // // set up the dependency and resolve D6->D7 uids.
  // $common_node_arguments = $common_arguments + array(
  //   'user_migration' => 'User',
  // );
  // foreach ($node_arguments as $arguments) {
  //   $arguments = array_merge_recursive($arguments, $common_node_arguments);
  //   Migration::registerMigration($arguments['class_name'], $arguments['machine_name'],
  //                                $arguments);
  // }


}


/**
 * Implements hook_migrate_api().
 */
function migrate_d2d_unca_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}
