<?php
/**
 * Implementation of hook_schema().
 */
function migrate_d2d_unca_schema(){
  $schema['migrate_taxonomy_term_data'] = array(
    'description' => 'Stores migrations term information.',
    'fields' => array(
      'tid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique term ID.',
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {taxonomy_vocabulary}.vid of the vocabulary to which the term is assigned.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The term name.',
        'translatable' => TRUE,
      ),
      'description' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'A description of the term.',
        'translatable' => TRUE,
      ),
      'format' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The {filter_format}.format of the description.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The weight of this term in relation to other terms.',
      ),
    ),
    'primary key' => array('tid'),
    'foreign keys' => array(
      'vocabulary' => array(
        'table' => 'taxonomy_vocabulary',
        'columns' => array('vid' => 'vid'),
      ),
    ),
    'indexes' => array(
      'taxonomy_tree' => array('vid', 'weight', 'name'),
      'vid_name' => array('vid', 'name'),
      'name' => array('name'),
    ),
  );

  return $schema;

}

/**
 * Implementation of hook_update_N()
 *
 */
function migrate_d2d_unca_update_7101() {


  $maps = db_select('migrate_map_uncapagect','p')
    ->fields('p')
    ->execute();

  if($maps){
    while($map = $maps->fetchAssoc()){
      $d7_url_alias = db_select('url_alias','d7u')
        ->fields('d7u')
        ->condition('source','node/'.$map['destid1'],'LIKE')
        ->execute()
        ->fetchAssoc();
      if($d7_url_alias){
        db_set_active('legacy');
        $d6_url_alias = db_select('url_alias','d6u')
          ->fields('d6u')
          ->condition('src','node/'.$map['sourceid1'],'LIKE')
          ->orderBy('pid','DESC')
          ->range(0,1)
          ->execute()
          ->fetchAssoc();
        db_set_active();
        if($d6_url_alias){
          if($d7_url_alias['alias'] != $d6_url_alias['dst']){
            db_merge('url_alias')
              ->key(array('pid' => $d7_url_alias['pid']))
              ->fields(array('alias' => $d6_url_alias['dst']))
              ->execute();
          }
        }
      }
    }
  }



}